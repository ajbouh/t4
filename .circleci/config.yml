version: 2

workflows:
  version: 2
  test:
    jobs:
      - test-3.6
      - test-lambdas
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy_pypi:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - deploy_aws:
          requires:
            - build


jobs:
  test-3.6: &test-template
    docker:
      - image: circleci/python:3.6-jessie
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -e api/python[tests]
      - run:
          name: Run Pytest
          command: |
            . venv/bin/activate
            cd api/python && pytest --cov=./
            codecov

  test-lambdas:
    docker:
      - image: circleci/python:3.6-jessie
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install lambdas/es/indexer[tests]
      - run:
          name: Pytest
          command: |
            . venv/bin/activate
            cd lambdas/es/indexer && pytest --cov=./

  build:
    docker:
      - image: circleci/python:3.6-jessie
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "api/python/setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e api/python[tests]
      - save_cache:
          key: v1-dependency-cache-{{ checksum "api/python/setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            cd api/python && pytest --cov=./
            codecov
      - store_artifacts:
          path: htmlcov/

  deploy_pypi:
    docker:
      - image: circleci/python:3.6-jessie
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "api/python/setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e api/python[tests]
      - save_cache:
          key: v1-dependency-cache-{{ checksum "api/python/setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python api/python/setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = quiltdata" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            cd api/python
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            cd api/python
            pip install twine
            twine upload dist/*

  deploy_aws:
      docker:
        - image: circleci/python:3.6-jessie
      steps:
        - checkout
        - run:
            name: install awscli
            command: |
              pip install awscli
        - run:
            name: deploy cloud formation template
            command: |
              . venv/bin/activate
              AWS_ACCESS_KEY_ID=$AWS_ACCESS AWS_SECRET_ACCESS_KEY=$AWS_SEC_KEY AWS_DEFAULT_REGION=$AWS_REGION .circleci/conditional_deploy.sh
